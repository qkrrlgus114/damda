
# Docker 입문

도커 입문 레퍼런스

https://subicura.com/2017/01/19/docker-guide-for-beginners-1.html


## 도커 이론 개념 1

### 도커 개념 + 이미지

서버 컴퓨터 > 리눅스 > 도커 > 컨테이너

모든 컨테이너에는 리눅스 비슷한 무언가가 들어 있다. 실제 운영체제는 아님

운영체제는 SW나 프로그램 명령을 HW에 전달하거나 한다. 

⇒ 컨테이너 안의 운영체제 비슷한 무언가도 리눅스로 정보를 전달하고 리눅스가 HW에 전달한다.

도커를 사용하려면 어떤 형태든 리눅스 운영체제를 갖춰야 한다.

윈도우에서 사용할 수 있는 건 리눅스 가상 환경을 받았기 때문

이미지와 컨테이너, (이미지 = 인터페이스와 유사)

이미지는 빵틀과 같다. 컨테이너의 설계도 역할을 하는 것이다.

따라서 이미지 하나로 동일한 컨테이너 여러 개를 배치하기 편리하다.

도커 허브를 통해 이미지를 내려받을 수 있다.

### 도커 컨테이너의 생애주기

사실 컨테이너는 오랫동안 쓰는 것이 아니라, 그때 쓰고 그때 버리는 일회용품에 가깝다.

컨테이너는 쉽게 만들 수 있다. 하나의 컨테이너를 업데이트하기보단, 새로운 업데이트된 소프트웨어가 있는 컨테이너를 사용하는 것이 좋다.

유지보수가 새로 구축보다 상대적으로 자원 낭비이기 때문이다.

> 컨테이너를 만들고 실행하고 종료하고 폐기한 다음 새로 만드는 것을 컨테이너의 생애주기라고 한다.
> 

### 컨테이너가 삭제되면 데이터 저장은?

도커가 설치된 물리적 서버의 디스크를 마운트해 디스크에 저장한다.

따라서 핵심 내용은 물리 서버에 저장하고, 필요할 때마다 컨테이너를 폐기하고 새로 생성하는 과정을 거치는 것이다.

### 중간 정리

1. 도커는 독립된 환경이기에 여러 개의 컨테이너를 띄울 수 있다.
2. 또한 컨테이너를 만들기 위한 이미지를 쉽게 만들고 내려받을 수 있다.
3. 컨테이너에 커널을 포함시킬 필요가 없어서 매우 가볍다

## 도커 설치하기

> 윈도우 OS용 도커 데스크톱를 설치할 것이다.
> 

도커 데스톱을 사용하기 위해서는 

1. Hyper-V가 활성 상태여야 한다.
2. 64비트 pc 환경에서만 동작 가능하다.
